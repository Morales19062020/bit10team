[{"C:\\Users\\Usuario\\migithub\\bit10team\\rickandmorty\\src\\index.js":"1","C:\\Users\\Usuario\\migithub\\bit10team\\rickandmorty\\src\\App.js":"2","C:\\Users\\Usuario\\migithub\\bit10team\\rickandmorty\\src\\components\\Navbar.jsx":"3","C:\\Users\\Usuario\\migithub\\bit10team\\rickandmorty\\src\\components\\Characters.jsx":"4","C:\\Users\\Usuario\\migithub\\bit10team\\rickandmorty\\src\\components\\Search.jsx":"5","C:\\Users\\Usuario\\migithub\\bit10team\\rickandmorty\\src\\components\\Favorites.jsx":"6"},{"size":209,"mtime":1678676131684,"results":"7","hashOfConfig":"8"},{"size":755,"mtime":1678676131669,"results":"9","hashOfConfig":"8"},{"size":1056,"mtime":1678747741962,"results":"10","hashOfConfig":"8"},{"size":891,"mtime":1678682400615,"results":"11","hashOfConfig":"8"},{"size":932,"mtime":1678742023645,"results":"12","hashOfConfig":"8"},{"size":6848,"mtime":1678744542151,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"63pygm",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"C:\\Users\\Usuario\\migithub\\bit10team\\rickandmorty\\src\\index.js",[],[],[],"C:\\Users\\Usuario\\migithub\\bit10team\\rickandmorty\\src\\App.js",[],[],"C:\\Users\\Usuario\\migithub\\bit10team\\rickandmorty\\src\\components\\Navbar.jsx",[],[],"C:\\Users\\Usuario\\migithub\\bit10team\\rickandmorty\\src\\components\\Characters.jsx",[],[],"C:\\Users\\Usuario\\migithub\\bit10team\\rickandmorty\\src\\components\\Search.jsx",[],[],"C:\\Users\\Usuario\\migithub\\bit10team\\rickandmorty\\src\\components\\Favorites.jsx",["35","36","37","38","39","40","41"],[],"import React, { useState, useEffect } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter, Link, Route, Routes } from \"react-router-dom\";\r\nimport Navbar from './Navbar'\r\nimport '../App.css'\r\nimport {Modal,ModalHeader,ModalBody,ModalFooter,} from \"reactstrap\";\r\n\r\n//Creando la tabla y las funciones y las Constantes del Crud//\r\nfunction Favorites () {\r\n  const dataArt = [\r\n    { id: 1, nombre: \"Rick Sanchez\", anime: 'Rick and Morty' },\r\n    { id: 2, nombre: \"Morty Smith\", anime: 'Rick and Morty' },\r\n    { id: 3, nombre: \"Summer Smith\", anime: 'Rick and Morty' },\r\n    { id: 4, nombre: \"Beth Smith\", anime: 'Rick and Morty' },\r\n    { id: 5, nombre: \"Jerry Smith\", anime: 'Rick and Morty' },\r\n    { id: 6, nombre: \"Annie\", anime: 'Rick and Morty' },\r\n  ];\r\n  const [data, setData] = useState(dataArt);\r\n  const [modalEditar, setModalEditar] = useState(false);\r\n  const [modalEliminar, setModalEliminar] = useState(false);\r\n  const [modalInsertar, setModalInsertar] = useState(false);\r\n  const [artSeleccionado, setArtSeleccionado] = useState({\r\n    id: '',\r\n    orden: '',\r\n    cantidad: ''\r\n  });\r\n  const seleccionarPersonaje=(elemento, caso)=>{\r\n    setArtSeleccionado(elemento);\r\n(caso==='Editar')?setModalEditar(true):setModalEliminar(true)\r\n  }\r\n  const handleChange=e=>{\r\n    const {name, value}=e.target;\r\n    setArtSeleccionado((prevState)=>({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  }\r\n  //Const de Editacion//\r\n  const editar=()=>{\r\n    var dataNueva=data;\r\n    dataNueva.map(personaje=>{\r\n      if(personaje.id===artSeleccionado.id){\r\n        personaje.nombre=artSeleccionado.nombre;\r\n        personaje.anime=artSeleccionado.anime;\r\n      }\r\n    });\r\n    setData(dataNueva);\r\n    setModalEditar(false);\r\n  }\r\n  //Const de Eliminacion//\r\n  const eliminar =()=>{\r\n    setData(data.filter(personaje=>personaje.id!==artSeleccionado.id));\r\n    setModalEliminar(false);\r\n  }\r\n  const abrirModalInsertar=()=>{\r\n    setArtSeleccionado(null);\r\n    setModalInsertar(true);\r\n  }\r\n  //Const de Insertar// \r\n  const insertar =()=>{\r\n    var valorInsertar=artSeleccionado;\r\n    valorInsertar.id=data[data.length-1].id+1;\r\n    var dataNueva = data;\r\n    dataNueva.push(valorInsertar);\r\n    setData(dataNueva);\r\n    setModalInsertar(false);\r\n  }\r\n  // Creando la tabla en el HTML//\r\n  //Agregar Personajes//\r\n  return ( \r\n    <div className=\"App\">\r\n    <div class= \"tabla\">\r\n      <h2>Escribe aquí tu personaje favorito</h2>\r\n      <br />\r\n    <button type=\"button\" class=\"btn btn-outline-danger\" onClick={()=>abrirModalInsertar()}>Agrega tu Personaje</button>\r\n    <br /><br /><br /><br />\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>PERSONAJE</th>\r\n            <th>ANIME</th>\r\n            <th>ACCIÓN</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map(elemento=>(\r\n            <tr>\r\n              <td>{elemento.id}</td>\r\n              <td>{elemento.nombre}</td>\r\n              <td>{elemento.anime}</td>\r\n              <td><button type=\"button\" class=\"btn btn-warning\" onClick={()=>seleccionarPersonaje(elemento, 'Editar')}>Editar</button> {\"   \"} \r\n              <button type=\"button\" class=\"btn btn-danger\" onClick={()=>seleccionarPersonaje(elemento, 'Eliminar')}>Eliminar</button></td>\r\n            </tr>\r\n          ))\r\n          }\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n      <Modal isOpen={modalEditar}>\r\n        <ModalHeader>\r\n          <div>\r\n            <h3>Editar Personaje</h3>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"form-group\">\r\n            <label>Id</label>\r\n            <input\r\n              className=\"form-control\"\r\n              readOnly\r\n              type=\"number\"\r\n              name=\"id\"\r\n              value={artSeleccionado && artSeleccionado.id}\r\n            />\r\n            <br />\r\n            <label>Personaje</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"nombre\"\r\n              value={artSeleccionado && artSeleccionado.nombre}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <label>Anime</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"anime\"\r\n              value={artSeleccionado && artSeleccionado.anime}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button type=\"button\" class=\"btn btn-outline-warning\" onClick={()=>editar()}>Actualizar</button>\r\n          <button type=\"button\" class=\"btn btn-outline-danger\" onClick={()=>setModalEditar(false)}>Cancelar</button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <Modal isOpen={modalEliminar}>\r\n        <ModalBody>\r\n          Estás Seguro que deseas eliminar el personaje {artSeleccionado && artSeleccionado.nombre}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button type=\"button\" class=\"btn btn-outline-warning\" onClick={()=>eliminar()}>\r\n            Aceptar\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={()=>setModalEliminar(false)}\r\n          >\r\n            Cancelar\r\n          </button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n        <Modal isOpen={modalInsertar}>\r\n        <ModalHeader>\r\n          <div>\r\n            <h3>Agrega un nuevo Personaje</h3>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div className=\"form-group\">\r\n            <label>Id</label>\r\n            <input\r\n              className=\"form-control\"\r\n              readOnly\r\n              type=\"text\"\r\n              name=\"id\"\r\n              value={data[data.length-1].id+1}\r\n            />\r\n            <br />\r\n            <label>Personaje</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"nombre\"\r\n              value={artSeleccionado ? artSeleccionado.nombre: ''}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <label>Anime</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"anime\"\r\n              value={artSeleccionado ? artSeleccionado.anime: ''}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <button type=\"button\" class=\"btn btn-outline-warning\" onClick={()=>insertar()}>Insertar</button>\r\n          <button type=\"button\" class=\"btn btn-outline-danger\" onClick={()=>setModalInsertar(false)}>Cancelar</button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n   \r\n  );\r\n\r\n  \r\n  }\r\n\r\n\r\n\r\nexport default Favorites;",[],{"ruleId":"42","severity":1,"message":"43","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"42","severity":1,"message":"46","line":3,"column":10,"nodeType":"44","messageId":"45","endLine":3,"endColumn":23},{"ruleId":"42","severity":1,"message":"47","line":3,"column":25,"nodeType":"44","messageId":"45","endLine":3,"endColumn":29},{"ruleId":"42","severity":1,"message":"48","line":3,"column":31,"nodeType":"44","messageId":"45","endLine":3,"endColumn":36},{"ruleId":"42","severity":1,"message":"49","line":3,"column":38,"nodeType":"44","messageId":"45","endLine":3,"endColumn":44},{"ruleId":"42","severity":1,"message":"50","line":4,"column":8,"nodeType":"44","messageId":"45","endLine":4,"endColumn":14},{"ruleId":"51","severity":1,"message":"52","line":41,"column":28,"nodeType":"53","messageId":"54","endLine":41,"endColumn":30},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'Navbar' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]